name: CI workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '.dockerignore'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-docker:
    runs-on: 'ubuntu-latest'

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node: ['16.16.0', '18.0.0', '18.3.0', '18.5.0'] 

    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1 
      DATABASE_URL: postgres://prisma:prisma@host.docker.internal:5432/tests

    steps:
      - uses: actions/checkout@v3

      - name: Run docker/docker-compose.yml
        run: |
          docker-compose -f docker/docker-compose.yml up -d

      - name: Build docker alpine
        run: docker build --build-arg NODE_VERSION=${{ matrix.node }} -t jkomyno/rockylinux-8-node -f ./docker/Dockerfile .

      - name: Run docker alpine
        run: docker run --add-host host.docker.internal:host-gateway -e DATABASE_URL="${{ env.DATABASE_URL }}" jkomyno/rockylinux-8-node

  build-native:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node: ['16.16.0', '18.0.0', '18.3.0', '18.5.0']

    name: "Build ${{ matrix.os }}: Node.js ${{ matrix.node }}"

    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1 
      DATABASE_URL: postgres://prisma:prisma@localhost:5432/tests

    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false

      - uses: actions/checkout@v3

      - name: Run docker/docker-compose.yml
        run: |
          docker-compose -f docker/docker-compose.yml up -d

      - name: User Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm i --legacy-peer-deps

      - name: prisma version
        run: npm run prisma:version

      - name: prisma db push
        run: npm run prisma:db-push

      - name: prisma db seed
        run: npm run prisma:db-seed
